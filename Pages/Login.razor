@page "/"
@using Microsoft.Extensions.Hosting;
@using NovaLaundryAppWebAdminBlazor.Server.Services
@using NovaLaundryAppWebAdminBlazor.Server.ViewModels
@inject IToastService toastService
@inject SweetAlertService Swal
@inject NavigationManager nav
@inject ProtectedLocalStorage localStorage
@using Blazored.Toast
@using Blazored.Toast.Services


<PageTitle>Login</PageTitle>

<div class="d-flex justify-content-center align-items-center row" style="background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(31,31,31,1) 98%, rgba(31,31,31,1) 100%); height:100vh;margin:0; widht:100%;">

    <!--Panel de login-->
    <div class="col-lg-3 col-md-6" style=";padding:0;height:fit-content;">
        <div class="mb-3 bg-black p-4 rounded">
            <!--Titulo de la empresa + Imagen-->
            <div class="row d-flex justify-content-center align-items-center ">
                <div class="col d-flex justify-content-center align-items-center">
                    <h3 class="m-2 text-light">Halia POS</h3>
                    <img src="/Logo.png" alt="Logo" class="img-fluid  mx-2" style="max-width: 20px;">
                </div>
            </div>

            <!--Subtitulo de Inciar sesion-->
            <div class="col text-center ">
                <h4 class="mt-3 mb-3" style="color:gold">Iniciar Sesión</h4>
            </div>

            <!--Contra/Usuario-->
            <label for="TxtUsuario" class="form-label text-light"><strong>Usuario</strong></label>
            <input type="text" class="form-control" style="border:0px;border-bottom:1px solid #CDCDCD; border-radius:0" id="TxtUsuario" @bind="@_user">
            <label for="TxtContra" class="form-label mt-3 text-light"><strong>Contraseña</strong></label>
            <input type="@(_showPassword ? "text" : "password")" class="form-control text-success" id="TxtContra" style="border: 0px; border-bottom: 1px solid #CDCDCD; border-radius: 0" @bind="@_password" />

            <!--Checks-->
            <div class="mt-2 d-flex justify-content-end align-items-center">
                <label class="form-check-label m-2 text-light" for="chckMostrar">Mostrar Contraseña</label>
                <input class="form-check-input" type="checkbox" id="chckMostrar" @bind="@_showPassword" />
            </div>

            <!--Selects-->
            <label for="CmbEmpresa" class="form-label mt-3 text-light"><strong>Empresa</strong></label>
            <InputSelect id="CmbEmpresa" class="form-select" @bind-Value="_idEmpresa" @onclick = "@CambioEmpresa">
                <option value="0">- Seleccione una empresa -</option>
                @foreach (var item in empresas)
                {
                    <option value="@item.EmpresaId">@item.NombreComercial</option>
                }
            </InputSelect>

            <label for="CmbSucursales" class="form-label mt-3 text-light"><strong>Sucursales</strong></label>
            <InputSelect id="CmbSucursales" class="form-select" @bind-Value="_idSucursal" @onchange="async () => await CambioEmpresa()">
                <option value="0">@(_idEmpresa == 0 ? "- Sin empresa -" : " Seleccione una sucursal ")</option>
                @foreach (var item in sucursales)
                {
                    <option value="@item.SucursalId">@item.NombreSucursal</option>
                }
            </InputSelect>

            <!--Boton ingresar-->
            <button type="submit" class="btn btn-success btn-lg mt-3 mb-2" style="width:100%;" @onclick="BtnIngresar_Click">
                Ingresar
            </button>
        </div>
    </div>
</div>

@code {
    //Variables
    private string _user { get; set; } = "";
    private string _password { get; set; } = "";
    private bool _showPassword { get; set; } = false;
    private bool _acceder { get; set; }
    private List<Empresa> empresas = new List<Empresa>();
    private List<Sucursale> sucursales = new List<Sucursale>();
    private int _idEmpresa { get; set; } = 0;
    private int _idSucursal { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            using (SystemAdminContext db = new SystemAdminContext())
            {
                empresas = db.Empresas.Where(s => s.EstatusId == "Activo").ToList();
            }
        }
    }

    private async Task CambioEmpresa()
    {
        using(SystemAdminContext db = new SystemAdminContext())
        {
            sucursales = db.Sucursales.Where(s => s.EmpresaId == _idEmpresa).ToList();
        }
    }

    private async void BtnIngresar_Click()
    {
        try
        {
            using (SystemAdminContext db = new SystemAdminContext())
            {
                if (_user == "" && _password == "")
                {
                    _ = Swal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Atención",
                            Text = "No ha digitado sus credenciales.",
                            Icon = SweetAlertIcon.Warning,
                            ConfirmButtonText = "Ok",
                            CancelButtonText = "Volver"
                        });

                    return;
                }

                if (_user == "")
                {
                    _ = Swal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Atención",
                            Text = "Debe agregar un nombre de usuario para acceder.",
                            Icon = SweetAlertIcon.Warning,
                            ConfirmButtonText = "Ok",
                            CancelButtonText = "Volver"
                        });

                    return;
                }

                if (_password == "")
                {
                    _ = Swal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Atención",
                            Text = "Debe agregar una contraseña para acceder.",
                            Icon = SweetAlertIcon.Warning,
                            ConfirmButtonText = "Ok",
                            CancelButtonText = "Volver"
                        });

                    return;
                }

                if (_idEmpresa == 0)
                {
                    _ = Swal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Atención",
                            Text = "No ha seleccionado una empresa.",
                            Icon = SweetAlertIcon.Warning,
                            ConfirmButtonText = "Ok",
                            CancelButtonText = "Volver"
                        });

                    return;
                }

                if (_idSucursal == 0)
                {
                    _ = Swal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Atención",
                            Text = "No ha seleccionado una sucursal.",
                            Icon = SweetAlertIcon.Warning,
                            ConfirmButtonText = "Ok",
                            CancelButtonText = "Volver"
                        });

                    return;
                }

                //Validaciones de Base

                //VerificarCredenciales

                Usuario usuario = db.Usuarios.Where(s => s.Nombre == _user && s.Pass == _password).FirstOrDefault();

                if (usuario == null)
                {
                    _ = Swal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Atención",
                            Text = "las credenciales digitadas no pertenecen a ningún usuario.",
                            Icon = SweetAlertIcon.Warning,
                            ConfirmButtonText = "Ok",
                            CancelButtonText = "Volver"
                        });

                    return;
                }
                else
                {
                    RelUsuarioSucursale relUsuarioEmpresa = db.RelUsuarioSucursales.Where(s => s.SucursalId == _idEmpresa && s.UsuariId == usuario.IdUsuarios).FirstOrDefault();

                    if (relUsuarioEmpresa != null)
                    {

                        localStorage.SetAsync("user", usuario.PrimerNombre+" "+usuario.PrimerApellido);
                        localStorage.SetAsync("userId",usuario.IdUsuarios);
                        localStorage.SetAsync("sucursalId", _idSucursal.ToString());
                        localStorage.SetAsync("empresaId", _idEmpresa.ToString());

                        nav.NavigateTo("MenuPrincipal", true);
                    }
                    else
                    {
                        _ = Swal.FireAsync(new SweetAlertOptions
                            {
                                Title = "Atención",
                                Text = "El usuario no tiene acceso a esa empresa.",
                                Icon = SweetAlertIcon.Warning,
                                ConfirmButtonText = "Ok",
                                CancelButtonText = "Volver"
                            });
                    }
                }


            }
        }
        catch (Exception ex)
        {
            _ = Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Error",
                    Text = $"Error de servidor. Error:{ex.Message}",
                    Icon = SweetAlertIcon.Error,
                    ConfirmButtonText = "Ok",
                    CancelButtonText = "Volver"
                });
        }
    }

}