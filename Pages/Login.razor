@page "/"

@using System;
@using System.Linq;
@using System.ComponentModel.DataAnnotations
@using Microsoft.EntityFrameworkCore;
@using Microsoft.Extensions.Hosting;
@using NovaLaundryAppWebAdminBlazor.Server.Services;
@using NovaLaundryAppWebAdminBlazor.Server.ViewModels;
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Forms

@inject NavigationManager NavigationManager
@inject SweetAlertService Swal
@inject IAuthenticationService AuthenticationService

<PageTitle>Halia || Inicio de Sesión</PageTitle>

<div>
    @if (isAuthenticated)
    {
        <div></div>
    }
    else
    {
        <div class="mainLoginCnt">

            <div class="loginCnt">
                <div class="imgCntLogin">
                    <!-- Image Section -->
                    <img class="logo" src="/Logo112.png" alt="Halia Logo Salon de Belleza">
                    <div class="cnt">
                        <img class="logo-phone" src="/Logo103.png" alt="Halia Logo Salon de Belleza">
                    </div>
                </div>

                <!-- Form Section -->
                <div class="loginFormCnt">
                    <form class="login-form" @onsubmit="HandleLogin">
                        <h1>Inicio de Sesión</h1>
                        <div class="input">
                            <label style="margin:0.5rem 0 0.5rem 0" for="username">Usuario</label>
                            <input type="text" id="username" @bind="_user" class="form-control" style="padding: 0.28rem 0.75rem " placeholder="Nombre de Usuario" required />
                        </div>
                        <div class="input">
                            <label style="margin:0.5rem 0 0.5rem 0" for="password">Contraseña</label>
                            <input type="@(_showPassword ? "text" : "password")" class="form-control" id="password" style="padding: 0.28rem 0.75rem ;" @bind="@_password" placeholder="Contraseña" required/>
                        </div>
                        <button style="margin-top:0.8rem; width: 100%" type="submit" class="btn btn-primary">Iniciar Sesión</button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private string _user { get; set; } = "";
    private string _password { get; set; } = "";
    private bool _showPassword { get; set; } = false;

    private bool isAuthenticated = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender) 
        {
            // Check if the user is authenticated
            isAuthenticated = await AuthenticationService.IsAuthenticatedAsync();
            StateHasChanged();
        }
    }

    private async Task HandleLogin()
    {
        try
        {
            // Attempt to sign in the user using SignInManager
            bool result = await AuthenticationService.LoginAsync(_user, _password);

            if (result)
            {
                // Redirect to the home page after successful login
                @* isAuthenticated = await AuthenticationService.IsAuthenticatedAsync(); *@
                NavigationManager.NavigateTo("/Home", forceLoad: true);
            }
            else
            {
                @* isAuthenticated = await AuthenticationService.IsAuthenticatedAsync(); *@
                // Show an error message for unsuccessful login attempts
                _ = Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Atención",
                    Text = "Credenciales Invalidas, Por favor contactese con el administrador",
                    Icon = SweetAlertIcon.Warning,
                    ConfirmButtonText = "Ok",
                    CancelButtonText = "Volver"
                });
            }
        }
        catch (Exception ex)
        {
            // Log any exceptions
            @* isAuthenticated = false; *@
            _ = Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Atención",
                    Text = $"Error en el Servidor: {ex.Message}",
                    Icon = SweetAlertIcon.Warning,
                    ConfirmButtonText = "Ok",
                    CancelButtonText = "Volver"
                });
        }
    }
}